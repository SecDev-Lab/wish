name: Update Graph Visualization

on:
  pull_request:
    paths:
      - 'wish-command-generation/src/wish_command_generation/graph.py'
      - 'wish-command-generation/src/wish_command_generation/nodes/**'
      - 'wish-log-analysis/src/wish_log_analysis/graph.py'
      - 'wish-log-analysis/src/wish_log_analysis/nodes/**'

jobs:
  update-graph:
    name: Update Graph for ${{ matrix.project }}
    runs-on: ubuntu-latest
    permissions:
      contents: write  # to push to a topic branch
      pull-requests: write  # to add a comment to a PR
    strategy:
      matrix:
        project:
          - wish-command-generation
          - wish-log-analysis
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}  # checkout the topic branch in a PR
      
      - name: Install Graphviz
        run: sudo apt-get install -y graphviz
      
      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "${{ matrix.project }}/.python-version"
      
      - name: Install the project
        run: cd ${{ matrix.project }} && uv sync --all-extras --dev
      
      - name: Generate graph visualization
        run: cd ${{ matrix.project }} && uv run python scripts/update_graph_visualization.py
      
      - name: Check for changes
        id: check_changes
        run: |
          if git diff --quiet docs/; then
            echo "No changes to graph visualization"
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected in graph visualization"
            echo "changes=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Commit and push changes
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add docs/
          git commit -m "docs: update graph visualization"
          git push
      
      - name: Comment on PR
        if: steps.check_changes.outputs.changes == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ“Š Graph visualization has been updated based on the changes in this PR.'
            })
